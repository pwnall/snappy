# Build matrix / environment variables are explained on:
# http://about.travis-ci.org/docs/user/build-configuration/
# This file can be validated on: http://lint.travis-ci.org/

sudo: false
dist: trusty
language: cpp

compiler:
  - gcc
  - clang
os:
  - linux
  - osx

env:
  - BUILD_SYSTEM=cmake BUILD_TYPE=Debug
  - BUILD_SYSTEM=cmake BUILD_TYPE=RelWithDebInfo
  - BUILD_SYSTEM=bazel BUILD_TYPE=RelWithDebInfo

matrix:
  allow_failures:
    - compiler: clang
      env: BUILD_TYPE=RelWithDebInfo

  # TODO(pwnall): Remove when done iterating.
  exclude:
    - env: BUILD_SYSTEM=cmake BUILD_TYPE=Debug
    - env: BUILD_SYSTEM=cmake BUILD_TYPE=RelWithDebInfo

addons:
  apt:
    # List of whitelisted in travis packages for ubuntu-trusty can be found here:
    #   https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-trusty
    # List of whitelisted in travis apt-sources:
    #   https://github.com/travis-ci/apt-source-whitelist/blob/master/ubuntu.json
    sources:
    - ubuntu-toolchain-r-test
    - llvm-toolchain-trusty-4.0
    packages:
    - cmake
    - gcc-7
    - g++-7
    - clang-4.0
    # Bazel installer dependencies.
    - pkg-config
    - python
    - unzip
    - wget
    - zip
    - zlib1g-dev

before_install:
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      wget https://github.com/bazelbuild/bazel/releases/download/0.7.0/bazel-0.7.0-installer-linux-x86_64.sh;
      chmod +x bazel-0.7.0-installer-linux-x86_64.sh;
      export PATH="$PATH:$HOME/bin";
  fi

install:
# Travis doesn't have a DSL for installing homebrew packages yet. Status tracked
# in https://github.com/travis-ci/travis-ci/issues/5377
# The Travis VM image for Mac already has a link at /usr/local/include/c++,
# causing Homebrew's gcc@6 installation to error out. This was reported to
# Homebrew maintainers at https://github.com/Homebrew/brew/issues/1742 and
# removing the link emerged as a workaround.
- if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    brew update;
    if [ -L /usr/local/include/c++ ]; then rm /usr/local/include/c++;
    brew install bazel gcc@7;
  fi
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      ./bazel-0.7.0-installer-linux-x86_64.sh --user;
  fi
# /usr/bin/gcc is stuck to old versions by on both Linux and OSX.
- if [ "$CXX" = "g++" ]; then export CXX="g++-7" CC="gcc-7"; fi
- echo ${CC}
- echo ${CXX}
- ${CXX} --version
- cmake --version

before_script:
- if [ "$BUILD_SYSTEM" = "cmake" ]; then mkdir -p build && cd build; fi
- if [ "$BUILD_SYSTEM" = "cmake" ]; then
      cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE; fi
- if [ "$BUILD_SYSTEM" = "cmake" ]; then cmake --build .; fi
- if [ "$BUILD_SYSTEM" = "cmake" ]; then cd ..; fi
- if [ "$BUILD_SYSTEM" = "bazel" ]; then bazel --batch build -c opt //... ; fi

script:
- if [ "$BUILD_SYSTEM" = "cmake" ]; then build/snappy_unittest; fi
- if [ "$BUILD_SYSTEM" = "bazel" ]; then
      bazel --batch test -c opt --test_output streamed //... ; fi
